import logging
import os
import time
from aiogram import types
from aiogram.filters import CommandStart, CommandObject
import aiohttp

from signature import MyBot
from keyboards import client_kb as nav

logging.basicConfig(level=logging.INFO)

class Client:
    def __init__(self, bot_instance: MyBot, db_user, db_ref):
        self.bot = bot_instance.bot
        self.dp = bot_instance.dp
        self.db_user = db_user  # Initialize db_user
        self.db_ref = db_ref    # Initialize db_ref
        self.register_handlers()

    def register_handlers(self):
        self.dp.message(CommandStart())(self.start)

    async def start(self, message: types.Message, command: CommandObject):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
        """
        command_args = command.args if command else None
        username = message.from_user.username if message.from_user.username else message.from_user.first_name
        
        try:
            if command_args:
                await self.process_referral(message, command_args, username)
            else:
                await self.process_registration(message, username)
        except Exception as e:
            logging.error(f"Error in start command: {e}")

    async def process_referral(self, message: types.Message, command_args: str, username: str):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        ref_user_id = await self.db_user.find_user(message.from_user.id)
        
        if ref_user_id is None:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
            await self.db_user.add_user(user_id=message.from_user.id, username_tg=username, password='123')
            ref_user_id = await self.db_user.find_user(message.from_user.id)
            await self.download_avatar(message.from_user.id)
            
            # –ù–∞—Ö–æ–¥–∏–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–≥–æ, –∫—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª)
            ref_user_refferer = await self.db_user.find_user(int(command_args))
            
            if ref_user_id and ref_user_refferer:
                # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É
                await self.db_ref.add_user(
                    user_id_id=ref_user_id,
                    ref_link=f'https://t.me/vapecoins_bot?start={message.from_user.id}',
                    ref_user_id=ref_user_refferer
                )
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥—Ä—É–∑–µ–π, –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–∏–≤–µ–ª —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                referral_count = await self.db_ref.get_referral_count(ref_user_refferer)
                
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–≥—Ä–∞–¥—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
                if referral_count < 3:
                    reward = 5000
                elif 4 <= referral_count <= 10:
                    reward = 7500
                else:
                    reward = 10000
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–µ–º–∏—É–º
                
                
                if message.from_user.is_premium:
                    reward *= 2  # –ï—Å–ª–∏ –ø—Ä–µ–º–∏—É–º, —É–¥–≤–∞–∏–≤–∞–µ–º –Ω–∞–≥—Ä–∞–¥—É
                
                # –î–æ–±–∞–≤–ª—è–µ–º –º–æ–Ω–µ—Ç—ã –Ω–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ —Ä–µ—Ñ–µ—Ä–µ—Ä—É
                await self.db_user.increase_user_money(user_id=ref_user_id, amount=reward)
                await self.db_user.increase_user_money(user_id=ref_user_refferer, amount=reward)
                
                # –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await self.bot.send_message(command_args, f"–ü–æ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è @{username}. –í—ã –ø–æ–ª—É—á–∏–ª–∏ {reward} –º–æ–Ω–µ—Ç!")
            
            else:
                await message.reply("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏.")
        
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await self.bot.send_message(
            message.from_user.id, 
            f"""–ü—Ä–∏–≤–µ—Ç, {message.from_user.username}! –≠—Ç–æ VapeCoin üëã

    –ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ —Å–º–æ—Ç—Ä–∏, –∫–∞–∫ —Ä–∞—Å—Ç—ë—Ç —Ç–≤–æ–π –±–∞–ª–∞–Ω—Å.

    –î—Ä—É–∑—å—è –µ—Å—Ç—å? –ó–æ–≤–∏ –∏—Ö –≤ –∏–≥—Ä—É. –¢–∞–∫ –≤—ã –≤–º–µ—Å—Ç–µ –ø–æ–ª—É—á–∏—Ç–µ –µ—â—ë –±–æ–ª—å—à–µ –º–æ–Ω–µ—Ç.

    VapeCoin - –æ–Ω –µ—Å—Ç—å, –æ–Ω –±—É–¥–µ—Ç –≤—Å–µ–≥–¥–∞!""", 
            reply_markup=nav.start(message.from_user.id)
        )

    async def process_registration(self, message: types.Message, username: str):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        ref_user_id = await self.db_user.find_user(message.from_user.id)
        
        if ref_user_id is None:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
            await self.db_user.add_user(user_id=message.from_user.id, username_tg=username,password='123')
            ref_user_id = await self.db_user.find_user(message.from_user.id)
            
            await self.download_avatar(message.from_user.id)
        
        # –ù–∞—Ö–æ–¥–∏–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ)
            ref_user_refferer = await self.db_user.find_user(123)  # Adjust the referrer ID as needed

            await self.db_ref.add_user(
                user_id_id=ref_user_id,
                ref_link=f'https://t.me/vapecoins_bot?start={message.from_user.id}',
                ref_user_id=ref_user_refferer
            )
        
        await self.bot.send_message(message.from_user.id, f"""–ü—Ä–∏–≤–µ—Ç, {message.from_user.username}! –≠—Ç–æ VapeCoin üëã

–ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ —Å–º–æ—Ç—Ä–∏, –∫–∞–∫ —Ä–∞—Å—Ç—ë—Ç —Ç–≤–æ–π –±–∞–ª–∞–Ω—Å.

–î—Ä—É–∑—å—è –µ—Å—Ç—å? –ó–æ–≤–∏ –∏—Ö –≤ –∏–≥—Ä—É. –¢–∞–∫ –≤—ã –≤–º–µ—Å—Ç–µ –ø–æ–ª—É—á–∏—Ç–µ –µ—â—ë –±–æ–ª—å—à–µ –º–æ–Ω–µ—Ç.

VapeCoin - –æ–Ω –µ—Å—Ç—å, –æ–Ω –±—É–¥–µ—Ç –≤—Å–µ–≥–¥–∞!""", reply_markup=nav.start(message.from_user.id))
    async def download_avatar(self, user_id: int):
        user = await self.bot.get_chat(user_id)
        photo = user.photo
        
        if photo:
            file_id = photo.big_file_id
            file_info = await self.bot.get_file(file_id)
            file_path = file_info.file_path
            
            file_url = f'https://api.telegram.org/file/bot{self.bot.token}/{file_path}'
            
            # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—É—Ç–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            media_folder = '/usr/src/vapecoin/media/'
            os.makedirs(media_folder, exist_ok=True)
            file_path_local = os.path.join(media_folder, f'{user_id}.jpg')
            
            async with aiohttp.ClientSession() as session:
                async with session.get(file_url) as resp:
                    if resp.status == 200:
                        with open(file_path_local, 'wb') as f:
                            f.write(await resp.read())
                    else:
                        logging.error(f"Failed to download avatar: {resp.status}")
        else:
            logging.warning(f"User {user_id} does not have a profile photo.")

